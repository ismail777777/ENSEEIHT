#  GLPK model file




###############################  Model ###############################




###############################  Sets  ###############################
set PRODUCTS;
set ORDERS;
set SHOPS;        

################### Variables ###################


var X{i in SHOPS, j in ORDERS, k in PRODUCTS}, >= 0, integer; 
var O{i in SHOPS, j in ORDERS}, >= 0, binary;
# or binary ?; 


###################  Constants: Data to load   #########################


param coutunitaire{i in SHOPS, k in PRODUCTS}; 


param stock{i in SHOPS, k in PRODUCTS}; 


param qtedemande{j in ORDERS, k in PRODUCTS};


param expeditionFixe{i in SHOPS, j in ORDERS};


param expeditionVar{i in SHOPS, j in ORDERS};


################### Constraints ###################




s.t. REspectqtetotaledechauqeproduit{j in ORDERS, k in PRODUCTS}:
  sum{i in SHOPS} X[i,j,k] = qtedemande[j,k];
s.t. Respectnondepassementdestock{i in SHOPS, j in ORDERS ,k in PRODUCTS}:
               X[i,j,k] <= stock[i,k];
s.t. Respect3MagasinParDemande{j in ORDERS}:
            sum{k in SHOPS}  O[k,j] <= + 3;
s.t. RespectTOTO2{i in SHOPS, j in PRODUCTS}:
             sum{k in ORDERS} O[i,k] <= + 2;
###### Objective ######


minimize CoutTotal: 
            sum{i in SHOPS, j in ORDERS, k in PRODUCTS} coutunitaire[i,k] * X[i,j,k] + sum{p in SHOPS, s in ORDERS} O[p,s] * (expeditionFixe[p,s] + expeditionVar[p,s]); 




end;

