[comment encoding = UTF-8 /]
[module toLTL('http://simplepdl')]


[template public processToLTL(aProcess : Process)]
[comment @main/]
[file (aProcess.name + '.ltl', false, 'UTF-8')]
[let wds : OrderedSet(WorkDefinition) = aProcess.getWDs() ]
op pret = [for (wd : WorkDefinition | wds)] [if (not(wds->first() = wd))] /\ [/if][wd.name/] ['_pret'/][/for];
op lance = [for (wd : WorkDefinition | wds)] [if (not(wds->first() = wd))] /\ [/if][wd.name/] ['_lance'/][/for];
op enExecution = [for (wd : WorkDefinition | wds)] [if (not(wds->first() = wd))] /\ [/if][wd.name/] ['_enExecution'/][/for];
op termine = [for (wd : WorkDefinition | wds)] [if (not(wds->first() = wd))] /\ [/if][wd.name/] ['_termine'/][/for][/let];
['[]'/] (termine => dead);
['[]'/] <> dead;
['[]'/] (dead => termine);
['[]'/] (termine => - <> pret /\ lance /\ - <> enExecution);
['[]'/] (enExecution => pret /\ lance /\ - <> termine);
['[]'/] (- <> lance => - <> enExecution /\ - <> termine);

[/file]
[/template]

[query public getWDs(p: Process) : OrderedSet(WorkDefinition) = 
			p.processElements->select( e | e.oclIsTypeOf(WorkDefinition) )
							 ->collect( e | e.oclAsType(WorkDefinition) ) 
							 ->asOrderedSet()
/]
